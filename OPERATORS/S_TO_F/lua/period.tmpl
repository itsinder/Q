return require 'Q/UTILS/lua/code_gen' {

   declaration = [[

#include "q_macros.h"
#include <stdio.h>
#include <stdint.h>
#include <stdlib.h>

typedef struct _period_${out_qtype}_rec_type {
   ${out_ctype} start;
   ${out_ctype} by;
   int p_len;
} PERIOD_${out_qtype}_REC_TYPE;

extern int
period_${out_qtype}(
  ${out_ctype} *X,
  uint64_t nX,
  PERIOD_${out_qtype}_REC_TYPE *ptr_in,
  bool is_first
  );
   ]],

   definition = [[

#include "_period_${out_qtype}.h"

//START_FUNC_DECL
int
period_${out_qtype}(
  ${out_ctype} *X,
  uint64_t nX,
  SEQ_${out_qtype}_REC_TYPE *ptr_in,
  bool is_first
  )
//STOP_FUNC_DECL
{
  int status = 0;

  ${out_ctype} start = ptr_in->start;
  ${out_ctype} by = ptr_in->by;
  int p_len = ptr_in->p_len;

  if ( by == 0 ) {
    by = (${out_ctype}) 1;
  }
  ${out_ctype} j = start;
  for ( int64_t i = 0; i < nX; i += 1 ) { 
    if ( i % p_len == 0 ) {
      j = start;
    }
    else {
      j += by;
    }
    X[i] = (${out_ctype}) j;
  }
  return status;
BYE:
  return status;
}

   ]]
}
