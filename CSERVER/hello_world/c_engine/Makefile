# For fast version, make -e DBGFLAGS="" -e OPTFLAGS=" -O4"
#
FLAGS=  -std=gnu99 -Wall -fPIC -W -Waggregate-return -Wcast-align -Wmissing-prototypes -Wnested-externs -Wshadow -Wwrite-strings -pedantic 
# Uncomment following to use openmp. Also, you need
# export LD_LIBRARY_PATH="/usr/local/lib64:$LD_LIBRARY_PATH"
# else you will get 
# else you will get 
# ./test_dt: /usr/lib/x86_64-linux-gnu/libgomp.so.1: version `GOMP_4.0' not
# found (required by ./test_dt)

DBGFLAGS= -g -DDEBUG
DBGFLAGS= 

OPTFLAGS= -O4
OPTFLAGS= 
OPTFLAGS= -O4 -fopenmp

LFLAGS= $(DBGFLAGS) $(OPTFLAGS)  $(FLAGS) 

CC= clang
CC= gcc

CSRCS := $(wildcard *.c)
COBJS = $(CSRCS:.c=.o)

SO_SRCS := $(filter-out main.c, $(CSRCS))
SO_OBJS = $(SO_SRCS:.c=.o)

all : libq_core.so


.c.o : 
	$(CC) -c -o $@ $< $(CFLAGS)  $(INCS)

libq_core.so : $(SO_OBJS) 
	$(CC) -shared $(CFLAGS) $(SO_OBJS) $(INCS) -o libq_core.so \
	-lm  -lpthread -ldl  -lgomp

clean:
	rm -r -f $(COBJS)  *.so
	echo "ALL CLEAN"

qclean :
	rm -r -f libq_core.so test_dt $(COBJS) *.o _*
